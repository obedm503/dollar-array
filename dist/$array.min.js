/**!
* @file $arrayJS: a simple JavaScript utility library for working with arrays of objects. Now available as a node module.
* @author [obedm503](https://github.com/obedm503/) <obedm503@gmail.com>
* @git [git repo](https://github.com/obedm503/dollar-array.git)
* @examples [https://obedm503.github.io/dollar-array/]
* @version 2.0.0
* @license MIT
*/
"undefined"==typeof $array&&($a=$array=function(){"use strict";var t="$arrayJS: ",r={sort:function(t){var r=1;return"-"===t[0]&&(r=-1,t=t.substr(1)),function(e,o){var n=e[t]<o[t]?-1:e[t]>o[t]?1:0;return n*r}}},e={keyExists:function(r){if(r&&"string"==typeof r){for(var e=!1,o=0,n=this.length;o<n;o++)this[o][r]&&(e=!0);return e}return void console.error(t+"no correct key given")},filterByKey:function(r,e){if(r&&this.keyExists(r)){var o={},n=[],i=this.map(function(t){return o={},n.indexOf(t[r])<0?(n.push(t[r]),e?o[e]=t[r]:o[r]=t[r],o):void 0}).filter(function(t){return t&&"{}"!==JSON.stringify(t)});return Object.setPrototypeOf(i,Object.getPrototypeOf(this)),i}return void console.error(t+'"'+r+'" is not a key in array')},invert:function(t){var r;r=t?this:Object.setPrototypeOf(this.slice(0),Object.getPrototypeOf(this));for(var e=0;e<r.length/2;e+=1){var o=r.length-1-e,n=r[e];r[e]=r[o],r[o]=n}return r},randomize:function(t){var r,e,o,n=this.length;for(r=t?this:Object.setPrototypeOf(this.slice(0),Object.getPrototypeOf(this));0!==n;)o=Math.floor(Math.random()*n),n-=1,e=r[n],r[n]=r[o],r[o]=e;return r},random:function(){var t=Math.floor(Math.random()*this.length);return Object.setPrototypeOf(this[t],{index:t})},ascend:function(e){return e&&this.keyExists(e)?this.sort(r.sort(e)):void console.error(t+"no correct key given")},descend:function(e){return e&&this.keyExists(e)?this.sort(r.sort("-"+e)):void console.error(t+"no correct key given")},convertToObject:function(r){if(r&&this.keyExists(r)){for(var e={},o=!0,n=0,i=this.length;n<i;n++)this[n][r]?e[this[n][r]]=this[n]:o=!1;return o?e:void console.error(t+"key not found")}return void console.error(t+"bad params")},groupObjects:function(t){var r=this.reduce(function(r,e){for(var o=[],n=0,i=t.length;n<i;n++)t[n](e)&&o.push(n);return 0===o.length?r[r.length-1].push(e):o.forEach(function(t){return r[t].push(e)}),r},Array.apply(null,{length:t.length+1}).map(function(t){return[]}));return Object.setPrototypeOf(r,Object.getPrototypeOf(this))}};return function(t){return Object.setPrototypeOf(t,Object.setPrototypeOf(e,Object.getPrototypeOf([])))}}(),"undefined"!=typeof module&&(module.exports=$array));