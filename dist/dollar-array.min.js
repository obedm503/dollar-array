(function(r,e){typeof exports==="object"&&typeof module!=="undefined"?e(exports):typeof define==="function"&&define.amd?define(["exports"],e):e(r.$array=r.$array||{})})(this,function(r){"use strict";function e(r){if(!r||typeof r!=="string"){throw Error("$arrayJS incorrect parameters")}var e=this.length;while(e--){if(this[e][r]){return true}}return false}function t(r,e,t){if(typeof r==="undefined"||!this){throw TypeError()}var n=typeof e==="undefined"||e===null?r:e;var i=t?p(JSON.parse(JSON.stringify(this))):this;for(var a=0,o=i.length;a<o;a++){var f={};var u=i[a];f[n]=u[r];i[a]=f}return i}function n(r){var e=r?p(JSON.parse(JSON.stringify(this))):this;var t=void 0;var n=void 0;var i=e.length;for(t=0;t<i/2;t+=1){n=i-1-t;var a=e[t];e[t]=e[n];e[n]=a}return e}function i(r){if(!this){throw TypeError('$arrayJS "this" is undefined')}var e=r?p(JSON.parse(JSON.stringify(this))):this;var t=e.length,n=void 0,i=void 0;while(0!==t){i=Math.floor(Math.random()*t);t-=1;n=e[t];e[t]=e[i];e[i]=n}return e}function a(){var r=JSON.parse(JSON.stringify(this));var e=Math.floor(Math.random()*r.length);var t=r[e];var n=typeof t;if(n!=="number"&&n!=="string"&&n!=="boolean"&&n!=="undefined"&&t!==null){Object.defineProperty(t,"index",{value:e})}return t}function o(r){var e=1;if(r[0]==="-"){e=-1;r=r.substr(1)}return function(t,n){var i=t[r]<n[r]?-1:t[r]>n[r]?1:0;return i*e}}function f(r,e){r[r.length]=e}function u(r,e){if(!this.propExists(r)){throw Error("$arrayJS no correct key given")}var t=e?p(JSON.parse(JSON.stringify(this))):this;return t.sort(o(r))}function s(r,e){if(!this.propExists(r)){throw Error("$arrayJS no correct key given")}var t=e?p(JSON.parse(JSON.stringify(this))):this;return t.sort(o("-"+r))}function y(r){if(typeof r==="undefined"||!this){throw Error("$arrayJS: property or context this: undefined")}var e={};var t=this.length;while(t--){var n=this[t][r];if(typeof n==="undefined"){continue}if(e.hasOwnProperty(n)){throw Error("$arrayJS repeated values for property")}e[n]=this[t]}return e}function v(r,e){for(var t=arguments.length,n=Array(t>2?t-2:0),i=2;i<t;i++){n[i-2]=arguments[i]}var a=this;var o=Array.isArray(r);var u=Object.keys(r);var s=u.length;if(!arguments.length||!s||!o&&typeof r!=="object"){throw Error("$arrayJS bad arguments")}var y=o?p(Array.apply(null,{length:s+1}).map(function(r){return p()})):{};var v=[];var h=o?s:"unmatched";return this.reduce(function(t,i,o){var y=void 0;var c=s;while(c--){var d;var l=u[c];t[l]=typeof t[l]!=="undefined"?t[l]:p();if((d=r[l]).call.apply(d,[e||i,i,o,a].concat(n))){y=true;f(t[l],i)}}if(y&&v.indexOf(i)===-1){f(v,i)}t[h]=typeof t[h]!=="undefined"?t[h]:p();if(t[h].indexOf(i)===-1&&v.indexOf(i)===-1){f(t[h],i)}return t},y)}/**!
* @file $arrayJS: a simple JavaScript utility library for working with arrays of objects. Now available as a node module.
* @author [obedm503](https://github.com/obedm503/) <obedm503@gmail.com>
* @git [git repo](https://github.com/obedm503/dollar-array.git)
* @examples [https://obedm503.github.io/dollar-array/]
* @version 2.0.2
* @license MIT
*/
function p(r){if(!(Array.isArray(r)&&arguments.length===1)){r=Array.prototype.slice.call(arguments,0)}Object.defineProperties(r,h);return r}var h={propExists:{value:e},filterByProp:{value:t},invert:{value:n},randomize:{value:i},random:{value:a},ascend:{value:u},descend:{value:s},toObject:{value:y},group:{value:v}};h.constructor={value:p};p.prototype=Object.create(Array.prototype);Object.defineProperties(p.prototype,h);p.version="2.0.2";p.isArray=function r(e){return Array.isArray(e)&&e.constructor===p};Object.defineProperty(Array.prototype,"to$array",{value:function r(){return p(this)}});(function(r){r(typeof global!=="undefined"?global:window)})(function(r){r["$array"]=p});r.$array=p;Object.defineProperty(r,"__esModule",{value:true})});
//# sourceMappingURL=dist/dollar-array.min.js.map